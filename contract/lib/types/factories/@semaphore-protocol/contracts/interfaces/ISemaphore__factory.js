"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.ISemaphore__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "Semaphore__CallerIsNotTheGroupAdmin",
        type: "error",
    },
    {
        inputs: [],
        name: "Semaphore__MerkleTreeDepthIsNotSupported",
        type: "error",
    },
    {
        inputs: [],
        name: "Semaphore__MerkleTreeRootIsExpired",
        type: "error",
    },
    {
        inputs: [],
        name: "Semaphore__MerkleTreeRootIsNotPartOfTheGroup",
        type: "error",
    },
    {
        inputs: [],
        name: "Semaphore__YouAreUsingTheSameNillifierTwice",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "groupId",
                type: "uint256",
            },
            {
                indexed: true,
                internalType: "address",
                name: "oldAdmin",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newAdmin",
                type: "address",
            },
        ],
        name: "GroupAdminUpdated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "groupId",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "oldMerkleTreeDuration",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "newMerkleTreeDuration",
                type: "uint256",
            },
        ],
        name: "GroupMerkleTreeDurationUpdated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "groupId",
                type: "uint256",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "merkleTreeRoot",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "nullifierHash",
                type: "uint256",
            },
            {
                indexed: true,
                internalType: "uint256",
                name: "externalNullifier",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "signal",
                type: "uint256",
            },
        ],
        name: "ProofVerified",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "groupId",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "identityCommitment",
                type: "uint256",
            },
        ],
        name: "addMember",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "groupId",
                type: "uint256",
            },
            {
                internalType: "uint256[]",
                name: "identityCommitments",
                type: "uint256[]",
            },
        ],
        name: "addMembers",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "groupId",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "depth",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "admin",
                type: "address",
            },
            {
                internalType: "uint256",
                name: "merkleTreeRootDuration",
                type: "uint256",
            },
        ],
        name: "createGroup",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "groupId",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "depth",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "admin",
                type: "address",
            },
        ],
        name: "createGroup",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "groupId",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "identityCommitment",
                type: "uint256",
            },
            {
                internalType: "uint256[]",
                name: "proofSiblings",
                type: "uint256[]",
            },
            {
                internalType: "uint8[]",
                name: "proofPathIndices",
                type: "uint8[]",
            },
        ],
        name: "removeMember",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "groupId",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "newAdmin",
                type: "address",
            },
        ],
        name: "updateGroupAdmin",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "groupId",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "newMerkleTreeDuration",
                type: "uint256",
            },
        ],
        name: "updateGroupMerkleTreeDuration",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "groupId",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "identityCommitment",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "newIdentityCommitment",
                type: "uint256",
            },
            {
                internalType: "uint256[]",
                name: "proofSiblings",
                type: "uint256[]",
            },
            {
                internalType: "uint8[]",
                name: "proofPathIndices",
                type: "uint8[]",
            },
        ],
        name: "updateMember",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "groupId",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "merkleTreeRoot",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "signal",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "nullifierHash",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "externalNullifier",
                type: "uint256",
            },
            {
                internalType: "uint256[8]",
                name: "proof",
                type: "uint256[8]",
            },
        ],
        name: "verifyProof",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
class ISemaphore__factory {
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.ISemaphore__factory = ISemaphore__factory;
ISemaphore__factory.abi = _abi;
