"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Reclaim__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        name: "Reclaim__GroupAlreadyExists",
        type: "error",
    },
    {
        inputs: [],
        name: "Reclaim__UserAlreadyMerkelized",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "previousAdmin",
                type: "address",
            },
            {
                indexed: false,
                internalType: "address",
                name: "newAdmin",
                type: "address",
            },
        ],
        name: "AdminChanged",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "beacon",
                type: "address",
            },
        ],
        name: "BeaconUpgraded",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "dappId",
                type: "bytes32",
            },
        ],
        name: "DappCreated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                components: [
                    {
                        internalType: "uint32",
                        name: "id",
                        type: "uint32",
                    },
                    {
                        internalType: "uint32",
                        name: "timestampStart",
                        type: "uint32",
                    },
                    {
                        internalType: "uint32",
                        name: "timestampEnd",
                        type: "uint32",
                    },
                    {
                        components: [
                            {
                                internalType: "address",
                                name: "addr",
                                type: "address",
                            },
                            {
                                internalType: "string",
                                name: "host",
                                type: "string",
                            },
                        ],
                        internalType: "struct Reclaim.Witness[]",
                        name: "witnesses",
                        type: "tuple[]",
                    },
                    {
                        internalType: "uint8",
                        name: "minimumWitnessesForClaimCreation",
                        type: "uint8",
                    },
                ],
                indexed: false,
                internalType: "struct Reclaim.Epoch",
                name: "epoch",
                type: "tuple",
            },
        ],
        name: "EpochAdded",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "groupId",
                type: "uint256",
            },
            {
                indexed: true,
                internalType: "string",
                name: "provider",
                type: "string",
            },
        ],
        name: "GroupCreated",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "uint8",
                name: "version",
                type: "uint8",
            },
        ],
        name: "Initialized",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "implementation",
                type: "address",
            },
        ],
        name: "Upgraded",
        type: "event",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "addr",
                        type: "address",
                    },
                    {
                        internalType: "string",
                        name: "host",
                        type: "string",
                    },
                ],
                internalType: "struct Reclaim.Witness[]",
                name: "witnesses",
                type: "tuple[]",
            },
            {
                internalType: "uint8",
                name: "requisiteWitnessesForClaimCreate",
                type: "uint8",
            },
        ],
        name: "addNewEpoch",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "id",
                type: "uint256",
            },
        ],
        name: "createDapp",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "provider",
                type: "string",
            },
            {
                internalType: "uint256",
                name: "merkleTreeDepth",
                type: "uint256",
            },
        ],
        name: "createGroup",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "currentEpoch",
        outputs: [
            {
                internalType: "uint32",
                name: "",
                type: "uint32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "epochDurationS",
        outputs: [
            {
                internalType: "uint32",
                name: "",
                type: "uint32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        name: "epochs",
        outputs: [
            {
                internalType: "uint32",
                name: "id",
                type: "uint32",
            },
            {
                internalType: "uint32",
                name: "timestampStart",
                type: "uint32",
            },
            {
                internalType: "uint32",
                name: "timestampEnd",
                type: "uint32",
            },
            {
                internalType: "uint8",
                name: "minimumWitnessesForClaimCreation",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "data",
                type: "string",
            },
            {
                internalType: "string",
                name: "target",
                type: "string",
            },
        ],
        name: "extractFieldFromContext",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint32",
                name: "epoch",
                type: "uint32",
            },
        ],
        name: "fetchEpoch",
        outputs: [
            {
                components: [
                    {
                        internalType: "uint32",
                        name: "id",
                        type: "uint32",
                    },
                    {
                        internalType: "uint32",
                        name: "timestampStart",
                        type: "uint32",
                    },
                    {
                        internalType: "uint32",
                        name: "timestampEnd",
                        type: "uint32",
                    },
                    {
                        components: [
                            {
                                internalType: "address",
                                name: "addr",
                                type: "address",
                            },
                            {
                                internalType: "string",
                                name: "host",
                                type: "string",
                            },
                        ],
                        internalType: "struct Reclaim.Witness[]",
                        name: "witnesses",
                        type: "tuple[]",
                    },
                    {
                        internalType: "uint8",
                        name: "minimumWitnessesForClaimCreation",
                        type: "uint8",
                    },
                ],
                internalType: "struct Reclaim.Epoch",
                name: "",
                type: "tuple",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint32",
                name: "epoch",
                type: "uint32",
            },
            {
                internalType: "bytes32",
                name: "identifier",
                type: "bytes32",
            },
            {
                internalType: "uint32",
                name: "timestampS",
                type: "uint32",
            },
        ],
        name: "fetchWitnessesForClaim",
        outputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "addr",
                        type: "address",
                    },
                    {
                        internalType: "string",
                        name: "host",
                        type: "string",
                    },
                ],
                internalType: "struct Reclaim.Witness[]",
                name: "",
                type: "tuple[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "provider",
                type: "string",
            },
            {
                internalType: "string",
                name: "params",
                type: "string",
            },
        ],
        name: "getMerkelizedUserParams",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        components: [
                            {
                                internalType: "string",
                                name: "provider",
                                type: "string",
                            },
                            {
                                internalType: "string",
                                name: "parameters",
                                type: "string",
                            },
                            {
                                internalType: "string",
                                name: "context",
                                type: "string",
                            },
                        ],
                        internalType: "struct Claims.ClaimInfo",
                        name: "claimInfo",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                components: [
                                    {
                                        internalType: "bytes32",
                                        name: "identifier",
                                        type: "bytes32",
                                    },
                                    {
                                        internalType: "address",
                                        name: "owner",
                                        type: "address",
                                    },
                                    {
                                        internalType: "uint32",
                                        name: "timestampS",
                                        type: "uint32",
                                    },
                                    {
                                        internalType: "uint32",
                                        name: "epoch",
                                        type: "uint32",
                                    },
                                ],
                                internalType: "struct Claims.CompleteClaimData",
                                name: "claim",
                                type: "tuple",
                            },
                            {
                                internalType: "bytes[]",
                                name: "signatures",
                                type: "bytes[]",
                            },
                        ],
                        internalType: "struct Claims.SignedClaim",
                        name: "signedClaim",
                        type: "tuple",
                    },
                ],
                internalType: "struct Reclaim.Proof",
                name: "proof",
                type: "tuple",
            },
        ],
        name: "getProviderFromProof",
        outputs: [
            {
                internalType: "string",
                name: "",
                type: "string",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_semaphoreAddress",
                type: "address",
            },
        ],
        name: "initialize",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        components: [
                            {
                                internalType: "string",
                                name: "provider",
                                type: "string",
                            },
                            {
                                internalType: "string",
                                name: "parameters",
                                type: "string",
                            },
                            {
                                internalType: "string",
                                name: "context",
                                type: "string",
                            },
                        ],
                        internalType: "struct Claims.ClaimInfo",
                        name: "claimInfo",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                components: [
                                    {
                                        internalType: "bytes32",
                                        name: "identifier",
                                        type: "bytes32",
                                    },
                                    {
                                        internalType: "address",
                                        name: "owner",
                                        type: "address",
                                    },
                                    {
                                        internalType: "uint32",
                                        name: "timestampS",
                                        type: "uint32",
                                    },
                                    {
                                        internalType: "uint32",
                                        name: "epoch",
                                        type: "uint32",
                                    },
                                ],
                                internalType: "struct Claims.CompleteClaimData",
                                name: "claim",
                                type: "tuple",
                            },
                            {
                                internalType: "bytes[]",
                                name: "signatures",
                                type: "bytes[]",
                            },
                        ],
                        internalType: "struct Claims.SignedClaim",
                        name: "signedClaim",
                        type: "tuple",
                    },
                ],
                internalType: "struct Reclaim.Proof",
                name: "proof",
                type: "tuple",
            },
            {
                internalType: "uint256",
                name: "_identityCommitment",
                type: "uint256",
            },
        ],
        name: "merkelizeUser",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "proxiableUUID",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "semaphoreAddress",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newImplementation",
                type: "address",
            },
        ],
        name: "upgradeTo",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newImplementation",
                type: "address",
            },
            {
                internalType: "bytes",
                name: "data",
                type: "bytes",
            },
        ],
        name: "upgradeToAndCall",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "provider",
                type: "string",
            },
            {
                internalType: "uint256",
                name: "_merkleTreeRoot",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_signal",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_nullifierHash",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "_externalNullifier",
                type: "uint256",
            },
            {
                internalType: "bytes32",
                name: "dappId",
                type: "bytes32",
            },
            {
                internalType: "uint256[8]",
                name: "_proof",
                type: "uint256[8]",
            },
        ],
        name: "verifyMerkelIdentity",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        components: [
                            {
                                internalType: "string",
                                name: "provider",
                                type: "string",
                            },
                            {
                                internalType: "string",
                                name: "parameters",
                                type: "string",
                            },
                            {
                                internalType: "string",
                                name: "context",
                                type: "string",
                            },
                        ],
                        internalType: "struct Claims.ClaimInfo",
                        name: "claimInfo",
                        type: "tuple",
                    },
                    {
                        components: [
                            {
                                components: [
                                    {
                                        internalType: "bytes32",
                                        name: "identifier",
                                        type: "bytes32",
                                    },
                                    {
                                        internalType: "address",
                                        name: "owner",
                                        type: "address",
                                    },
                                    {
                                        internalType: "uint32",
                                        name: "timestampS",
                                        type: "uint32",
                                    },
                                    {
                                        internalType: "uint32",
                                        name: "epoch",
                                        type: "uint32",
                                    },
                                ],
                                internalType: "struct Claims.CompleteClaimData",
                                name: "claim",
                                type: "tuple",
                            },
                            {
                                internalType: "bytes[]",
                                name: "signatures",
                                type: "bytes[]",
                            },
                        ],
                        internalType: "struct Claims.SignedClaim",
                        name: "signedClaim",
                        type: "tuple",
                    },
                ],
                internalType: "struct Reclaim.Proof",
                name: "proof",
                type: "tuple",
            },
        ],
        name: "verifyProof",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "";
const isSuperArgs = (xs) => xs.length > 1;
class Reclaim__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.Reclaim__factory = Reclaim__factory;
Reclaim__factory.bytecode = _bytecode;
Reclaim__factory.abi = _abi;
